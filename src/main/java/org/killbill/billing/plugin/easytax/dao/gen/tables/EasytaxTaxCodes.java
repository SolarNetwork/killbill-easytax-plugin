/*
 * This file is generated by jOOQ.
*/
package org.killbill.billing.plugin.easytax.dao.gen.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.killbill.billing.plugin.easytax.dao.JodaDateTimeBinding;
import org.killbill.billing.plugin.easytax.dao.gen.DefaultSchema;
import org.killbill.billing.plugin.easytax.dao.gen.Keys;
import org.killbill.billing.plugin.easytax.dao.gen.tables.records.EasytaxTaxCodesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EasytaxTaxCodes extends TableImpl<EasytaxTaxCodesRecord> {

    private static final long serialVersionUID = 280469853;

    /**
     * The reference instance of <code>easytax_tax_codes</code>
     */
    public static final EasytaxTaxCodes EASYTAX_TAX_CODES = new EasytaxTaxCodes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EasytaxTaxCodesRecord> getRecordType() {
        return EasytaxTaxCodesRecord.class;
    }

    /**
     * The column <code>easytax_tax_codes.record_id</code>.
     */
    public final TableField<EasytaxTaxCodesRecord, ULong> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>easytax_tax_codes.kb_tenant_id</code>.
     */
    public final TableField<EasytaxTaxCodesRecord, String> KB_TENANT_ID = createField("kb_tenant_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>easytax_tax_codes.tax_zone</code>.
     */
    public final TableField<EasytaxTaxCodesRecord, String> TAX_ZONE = createField("tax_zone", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>easytax_tax_codes.product_name</code>.
     */
    public final TableField<EasytaxTaxCodesRecord, String> PRODUCT_NAME = createField("product_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>easytax_tax_codes.tax_code</code>.
     */
    public final TableField<EasytaxTaxCodesRecord, String> TAX_CODE = createField("tax_code", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>easytax_tax_codes.tax_rate</code>.
     */
    public final TableField<EasytaxTaxCodesRecord, BigDecimal> TAX_RATE = createField("tax_rate", org.jooq.impl.SQLDataType.DECIMAL.precision(15, 9).nullable(false), this, "");

    /**
     * The column <code>easytax_tax_codes.valid_from_date</code>.
     */
    public final TableField<EasytaxTaxCodesRecord, DateTime> VALID_FROM_DATE = createField("valid_from_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new JodaDateTimeBinding());

    /**
     * The column <code>easytax_tax_codes.valid_to_date</code>.
     */
    public final TableField<EasytaxTaxCodesRecord, DateTime> VALID_TO_DATE = createField("valid_to_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "", new JodaDateTimeBinding());

    /**
     * The column <code>easytax_tax_codes.created_date</code>.
     */
    public final TableField<EasytaxTaxCodesRecord, DateTime> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new JodaDateTimeBinding());

    /**
     * Create a <code>easytax_tax_codes</code> table reference
     */
    public EasytaxTaxCodes() {
        this("easytax_tax_codes", null);
    }

    /**
     * Create an aliased <code>easytax_tax_codes</code> table reference
     */
    public EasytaxTaxCodes(String alias) {
        this(alias, EASYTAX_TAX_CODES);
    }

    private EasytaxTaxCodes(String alias, Table<EasytaxTaxCodesRecord> aliased) {
        this(alias, aliased, null);
    }

    private EasytaxTaxCodes(String alias, Table<EasytaxTaxCodesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EasytaxTaxCodesRecord, ULong> getIdentity() {
        return Keys.IDENTITY_EASYTAX_TAX_CODES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EasytaxTaxCodesRecord> getPrimaryKey() {
        return Keys.KEY_EASYTAX_TAX_CODES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EasytaxTaxCodesRecord>> getKeys() {
        return Arrays.<UniqueKey<EasytaxTaxCodesRecord>>asList(Keys.KEY_EASYTAX_TAX_CODES_PRIMARY, Keys.KEY_EASYTAX_TAX_CODES_RECORD_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EasytaxTaxCodes as(String alias) {
        return new EasytaxTaxCodes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EasytaxTaxCodes rename(String name) {
        return new EasytaxTaxCodes(name, null);
    }
}
