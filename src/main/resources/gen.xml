<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
    Copyright 2017 SolarNetwork Foundation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<configuration>
    <!-- Configure the database connection here -->
    <jdbc>
        <driver>com.mysql.jdbc.Driver</driver>
        <url>jdbc:mysql://127.0.0.1:3306/killbill</url>
        <user>killbill</user>
        <password>killbill</password>

        <!-- You can also pass user/password and other JDBC properties in the optional properties tag:
        <properties>
            <property><key>user</key><value>[db-user]</value></property>
            <property><key>password</key><value>[db-password]</value></property>
        </properties>
         -->
    </jdbc>

    <generator>
        <database>
            <!-- The database dialect from jooq-meta. Available dialects are
                 named org.util.[database].[database]Database. Known values are:

                 org.jooq.util.ase.ASEDatabase (to be used with Sybase ASE)
                 org.jooq.util.cubrid.CUBRIDDatabase
                 org.jooq.util.db2.DB2Database
                 org.jooq.util.derby.DerbyDatabase
                 org.jooq.util.h2.H2Database
                 org.jooq.util.hsqldb.HSQLDBDatabase
                 org.jooq.util.ingres.IngresDatabase
                 org.jooq.util.mysql.MySQLDatabase
                 org.jooq.util.oracle.OracleDatabase
                 org.jooq.util.postgres.PostgresDatabase
                 org.jooq.util.sqlite.SQLiteDatabase
                 org.jooq.util.sqlserver.SQLServerDatabase
                 org.jooq.util.sybase.SybaseDatabase (to be used with Sybase SQL Anywhere)

                 You can also provide your own org.jooq.util.Database implementation
                 here, if your database is currently not supported or if you wish to
                 read the database schema from a file, such as a Hibernate .hbm.xml file -->
            <name>org.jooq.util.mysql.MySQLDatabase</name>

            <!-- All elements that are generated from your schema (A Java regular expression.
                 Use the pipe to separate several expressions) Watch out for
                 case-sensitivity. Depending on your database, this might be
                 important! You can create case-insensitive regular expressions
                 using this syntax: (?i:expr) -->
            <includes>easytax_.*</includes>

            <!-- All elements that are excluded from your schema (A Java regular expression.
                 Use the pipe to separate several expressions). Excludes match before
                 includes -->
            <excludes></excludes>

            <!-- The schema that is used locally as a source for meta information.
                 This could be your development schema or the production schema, etc
                 This cannot be combined with the schemata element.

                 If left empty, jOOQ will generate all available schemata. See the
                 manual's next section to learn how to generate several schemata -->
            <inputSchema>killbill</inputSchema>
            <outputSchema/>

            <customTypes>
                <customType>
                    <name>DateTimeUTC</name>
                    <type>org.joda.time.DateTime</type>
                    <binding>org.killbill.billing.plugin.easytax.dao.JodaDateTimeBinding</binding>
                </customType>
            </customTypes>

            <forcedTypes>
                <forcedType>
                    <name>DateTimeUTC</name>
                    <expression>.*_date</expression>
                    <types>.*</types>
                </forcedType>
            </forcedTypes>
          </database>

        <generate>
            <!-- Generation flags: See advanced configuration properties -->
        </generate>

        <target>
            <!-- The destination package of your generated classes (within the
                 destination directory)

                 jOOQ may append the schema name to this package if generating multiple schemas,
                 e.g. org.jooq.your.packagename.schema1
                      org.jooq.your.packagename.schema2 -->
            <packageName>org.killbill.billing.plugin.easytax.dao.gen</packageName>

            <!-- The destination directory of your generated classes -->
            <directory>src/main/java/</directory>
        </target>
    </generator>
</configuration>
